// Code generated by "stringer -type=nodeKind -trimprefix=node"; DO NOT EDIT.

package expressions

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[nodeNone-0]
	_ = x[nodeNum-1]
	_ = x[nodeName-2]
	_ = x[nodeCall-3]
	_ = x[nodeArg-4]
	_ = x[nodeNeg-5]
	_ = x[nodeAdd-6]
	_ = x[nodeSub-7]
	_ = x[nodeMul-8]
	_ = x[nodeDiv-9]
	_ = x[nodePow-10]
	_ = x[nodeNop-11]
}

const _nodeKind_name = "NoneNumNameCallArgNegAddSubMulDivPowNop"

var _nodeKind_index = [...]uint8{0, 4, 7, 11, 15, 18, 21, 24, 27, 30, 33, 36, 39}

func (i nodeKind) String() string {
	if i < 0 || i >= nodeKind(len(_nodeKind_index)-1) {
		return "nodeKind(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _nodeKind_name[_nodeKind_index[i]:_nodeKind_index[i+1]]
}
